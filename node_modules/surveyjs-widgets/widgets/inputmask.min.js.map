{"version":3,"sources":["webpack://[name]/webpack/universalModuleDefinition","webpack://[name]/webpack/bootstrap","webpack://[name]/external {\"root\":\"Inputmask\",\"commonjs2\":\"inputmask\",\"commonjs\":\"inputmask\",\"amd\":\"inputmask\"}","webpack://[name]/./src/inputmask.js"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__1__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","init","Survey","widget","numericGroupSeparator","numericRadixPoint","undefined","numericAutoGroup","numericDigits","numericDigitsOptional","numericPlaceholder","autoUnmask","clearIncomplete","widgetIsLoaded","isFit","question","getType","inputMask","inputFormat","isDefaultRender","activatedByChanged","activatedBy","JsonObject","metaData","findProperty","properties","category","default","choices","visible","addProperties","applyInputMask","surveyElement","el","mask","options","option","this","groupSeparator","radixPoint","autoGroup","digits","digitsOptional","prefix","suffix","placeholder","onblur","inputmask","getemptymask","customWidgetData","editorValue","oninput","isNeedRender","onfocusout","onchange","isComplete","unmaskedvalue","updateHandler","valueChangedCallback","afterRender","input","querySelector","items","length","item","editor","inputId","willUnmount","remove","CustomWidgetCollection","Instance","addCustomWidget"],"mappings":"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","file":"widgets/inputmask.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"inputmask\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"widgets/inputmask\", [\"inputmask\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"widgets/inputmask\"] = factory(require(\"inputmask\"));\n\telse\n\t\troot[\"widgets/inputmask\"] = factory(root[\"Inputmask\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__1__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","import Inputmask from \"inputmask\";\n\nfunction init(Survey) {\n  var widget = {\n    name: \"maskedit\",\n    numericGroupSeparator: \",\",\n    numericRadixPoint: undefined,\n    numericAutoGroup: true,\n    numericDigits: 2,\n    numericDigitsOptional: false,\n    numericPlaceholder: \"0\",\n    autoUnmask: true,\n    clearIncomplete: true,\n    widgetIsLoaded: function () {\n      return typeof Inputmask != \"undefined\";\n    },\n    isFit: function (question) {\n      if (question.getType() == \"multipletext\") return true;\n      return (\n        question.getType() == \"text\" &&\n        (question.inputMask != \"none\" || question.inputFormat)\n      );\n    },\n    isDefaultRender: true,\n    activatedByChanged: function (activatedBy) {\n      if (Survey.JsonObject.metaData.findProperty(\"text\", \"inputMask\")) return;\n      var properties = [\n        {\n          name: \"autoUnmask:boolean\",\n          category: \"general\",\n          default: true,\n        },\n        {\n          name: \"clearIncomplete:boolean\",\n          category: \"general\",\n          default: true,\n        },\n        { name: \"inputFormat\", category: \"general\" },\n        {\n          name: \"inputMask\",\n          category: \"general\",\n          default: \"none\",\n          choices: [\n            \"none\",\n            \"datetime\",\n            \"currency\",\n            \"decimal\",\n            \"email\",\n            \"phone\",\n            \"ip\",\n          ],\n        },\n        {\n          name: \"numericDigits\",\n          category: \"general\",\n          visible: false,\n        },\n        {\n          name: \"options\",\n          category: \"general\",\n          visible: false,\n        },\n        {\n          name: \"prefix\",\n          category: \"general\",\n          visible: false,\n        },\n        {\n          name: \"suffix\",\n          category: \"general\",\n          visible: false,\n        },\n      ];\n      Survey.JsonObject.metaData.addProperties(\"text\", properties);\n      Survey.JsonObject.metaData.addProperties(\n        \"matrixdropdowncolumn\",\n        properties\n      );\n      Survey.JsonObject.metaData.addProperties(\"multipletextitem\", properties);\n    },\n    applyInputMask: function (surveyElement, el) {\n      var rootWidget = this;\n      var mask =\n        surveyElement.inputMask !== \"none\"\n          ? surveyElement.inputMask\n          : surveyElement.inputFormat;\n      var options = {};\n      if (typeof surveyElement.options === \"object\") {\n        for (var option in surveyElement.options) {\n          options[option] = surveyElement.options[option];\n        }\n      }\n      options.autoUnmask = typeof surveyElement.autoUnmask !== \"undefined\"\n        ? surveyElement.autoUnmask\n        : rootWidget.autoUnmask;\n      options.clearIncomplete = typeof surveyElement.clearIncomplete !== \"undefined\"\n        ? surveyElement.clearIncomplete\n        : rootWidget.clearIncomplete;\n      if (surveyElement.inputMask !== \"none\") {\n        options.inputFormat = surveyElement.inputFormat;\n      }\n      if (\n        surveyElement.inputMask === \"currency\" ||\n        surveyElement.inputMask === \"decimal\"\n      ) {\n        options.groupSeparator = rootWidget.numericGroupSeparator;\n        options.radixPoint = rootWidget.numericRadixPoint;\n        options.autoGroup = rootWidget.numericAutoGroup;\n      }\n      if (surveyElement.inputMask === \"currency\") {\n        options.digits = surveyElement.numericDigits || rootWidget.numericDigits;\n        options.digitsOptional = rootWidget.numericDigitsOptional;\n        options.prefix = surveyElement.prefix || \"\";\n        options.suffix = surveyElement.suffix || \"\";\n        options.placeholder = rootWidget.numericPlaceholder;\n      }\n      // if (surveyElement.inputMask == \"datetime\") {\n      //   mask = surveyElement.inputFormat;\n      // }\n      if (surveyElement.inputMask === \"phone\" && !!surveyElement.inputFormat) {\n        mask = surveyElement.inputFormat;\n      }\n\n      Inputmask(mask, options).mask(el);\n\n      el.onblur = function () {\n        if (!el.inputmask) return;\n        if (surveyElement.value === el.inputmask.getemptymask()) {\n          surveyElement.value = \"\";\n        }\n      };\n\n      var customWidgetData =\n        surveyElement.getType() === \"multipletextitem\"\n          ? surveyElement.editorValue.customWidgetData\n          : surveyElement.customWidgetData;\n      el.oninput = function () {\n        customWidgetData.isNeedRender = true;\n      };\n\n      var pushValueHandler = function () {\n        if (!el.inputmask) return;\n        if (el.inputmask.isComplete()) {\n          surveyElement.value = options.autoUnmask\n            ? el.inputmask.unmaskedvalue()\n            : el.value;\n        } else {\n          surveyElement.value = null;\n        }\n      };\n      el.onfocusout = el.onchange = pushValueHandler;\n\n      var updateHandler = function () {\n        el.value =\n          surveyElement.value === undefined || surveyElement.value === null\n            ? \"\"\n            : surveyElement.value;\n      };\n      surveyElement.valueChangedCallback = updateHandler;\n      updateHandler();\n    },\n    afterRender: function (question, el) {\n      if (question.getType() != \"multipletext\") {\n        var input = el.querySelector(\"input\") || el;\n        this.applyInputMask(question, input);\n      } else {\n        for (var i = 0; i < question.items.length; i++) {\n          var item = question.items[i];\n          if (item.inputMask != \"none\" || item.inputFormat) {\n            var input = el.querySelector(\"#\" + item.editor.inputId);\n            if (input) {\n              this.applyInputMask(item, input);\n            }\n          }\n        }\n      }\n    },\n    willUnmount: function (question, el) {\n      var input = el.querySelector(\"input\") || el;\n      if (!!input && !!input.inputmask) {\n        input.inputmask.remove();\n      }\n    },\n  };\n\n  Survey.CustomWidgetCollection.Instance.addCustomWidget(widget);\n}\n\nif (typeof Survey !== \"undefined\") {\n  init(Survey);\n}\n\nexport default init;\n"],"sourceRoot":""}